[
  {
    "theme": "classes",
    "name": "Задание 1",
    "id": "1",
    "text": "Создайте класс Worker. Класс должен содержать свойства name, surname. Создайте на его основе объект worker. Выведите в консоль созданный объект.",
    "defaultValue": "const worker = new Worker('Имя', 'Фамилия');\nconsole.log(worker);"
  },
  {
    "theme": "classes",
    "name": "Задание 2",
    "id": "2",
    "text": "Добавьте в класс Worker метод fullName, который будет возвращать полное имя работника в формате 'Фамилия, Имя'. Создайте объект worker на основе класса Worker и выведите его полное имя в консоль с помощью метода fullName",
    "defaultValue": "class Worker { \n  constructor(name, surname) {\n   this.name = name;\n   this.surname = surname;\n}\n//ваш код\n}\n//ваш код\nconsole.log()//ваш код"
  },
  {
    "theme": "classes",
    "name": "Задание 3",
    "id": "3",
    "text": "Создайте класс Car. Класс должен содержать свойства brand, model и year. Создайте на его основе объект car и выведите его свойства в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 4",
    "id": "4",
    "text": "Добавьте в класс Car метод getAge, который будет возвращать возраст машины (текущий год минус год выпуска,текущий год нужно получить через класc Date). Результат в консоли должен быть типом данных numbers.",
    "defaultValue": "class Car {\n  constructor(brand, model, year) {\n  this.brand = brand;\n  this.model = model;\n  this.year = year;\n  }\n}\nconst car = new Car('BMW','X6',2023);\nconsole.log(car.getAge());"
  },
  {
    "theme": "classes",
    "name": "Задание 5",
    "id": "5",
    "text": "Cоздайте класс Rectangle. Класс должен содержать свойства width и height. Создайте на его основе объект rectangle и выведите его свойства в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 6",
    "id": "6",
    "text": "Добавьте в класс Rectangle метод getArea, который будет возвращать площадь прямоугольника (произведение ширины и высоты). Создайте объект rectangle на основе класса Rectangle и выведите его площадь в консоль с помощью метода getArea.",
    "defaultValue": "class Rectangle {\n  constructor(width, height) {\n   this.width = width;\n   this.height = height;\n}\n//твой код\n}\nconst rectangle = new Rectangle();\nconsole.log(); //твой код"
  },
  {
    "theme": "classes",
    "name": "Задание 7",
    "id": "7",
    "text": "Cоздайте класс Circle. Класс должен содержать свойство radius. Создайте на его основе объект circle и выведите его свойство в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 8",
    "id": "8",
    "text": "Добавьте в класс Circle метод calculateArea, который будет вычислять и возвращать площадь круга. Формула для расчета площади круга: площадь = радиус * радиус * 3.14. Создайте объект circle2 на основе класса Circle с радиусом 3 и выведите его площадь круга в консоль с помощью метода calculateArea.",
    "defaultValue": "class Circle {\n  constructor(radius){\n   this.radius = radius\n}\n//ваш код\n}\nconst circle = new Circle(12)\nconsole.log();//ваш код"
  },
  {
    "theme": "classes",
    "name": "Задание 9",
    "id": "9",
    "text": "Создайте класс Student. Класс должен содержать свойства name, age и grade. Создайте на его основе объект student и выведите его свойства в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 10",
    "id": "10",
    "text": "Добавьте в класс Student метод increaseGrade, который будет увеличивать текущую оценку на 1. Создайте объект student на основе класса Student, увеличьте его оценку с помощью метода increaseGrade и выведите новую оценку в консоль.",
    "defaultValue": "class Student {\n  constructor(name, age, grade) {\n   this.name =name\n   this.age = age;\n   this.grade = grade;\n}\n}\nconst student = new Student('Cat',29, 2);"
  },
  {
    "theme": "classes",
    "name": "Задание 11",
    "id": "11",
    "text": "Создайте класс Book. Класс должен содержать свойства title, author и year. Создайте на его основе объект book и выведите его свойства в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 12",
    "id": "12",
    "text": "Добавьте в класс Book метод getTitleAndAuthor, который будет возвращать строку в формате 'Название книги - Автор'. Создайте объект book на основе класса Book и выведите его название и автора в консоль с помощью метода getTitleAndAuthor.",
    "defaultValue": "class Book {\n  constructor(title, author, year) {\n   this.title = title;\n   this.author = author;\n   this.year = year;\n}\n//ваш код\n}\nconst book = new Book('Выразительный Javascript', 'Марейн Хавербек', 2018);\nconsole.log();//ваш код"
  },
  {
    "theme": "classes",
    "name": "Задание 13",
    "id": "13",
    "text": "Создайте класс BankAccount. Класс должен содержать свойства accountNumber и balance. Создайте на его основе объект account и выведите его свойства в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 14",
    "id": "14",
    "text": "Добавьте в класс BankAccount метод deposit, который будет увеличивать баланс на заданную сумму. Создайте объект account на основе класса BankAccount, пополните его баланс с помощью метода deposit и выведите новый баланс в консоль.",
    "defaultValue": "class BankAccount{\n  constructor(accountNumber,balance){\n   this.accountNumber = accountNumber\n   this.balance = balance\n}\n//ваш код\n}\nconst account = new BankAccount(324234,534554)\nconsole.log(); //ваш код"
  },
  {
    "theme": "classes",
    "name": "Задание 15",
    "id": "15",
    "text": "В класс BankAccount добавлен метод withdraw, который уменьшает баланс на заданную сумму. Если запрошенная сумма превышает текущий баланс, выведите сообщение 'Недостаточно средств'. Создайте объект account на основе класса BankAccount, попробуйте снять с него сумму, превышающую баланс, и выведите соответствующее сообщение в консоль.",
    "defaultValue": "class BankAccount {\n  constructor(accountNumber, balance) {\n   this.accountNumber = accountNumber;\n   this.balance = balance;\n}\n   deposit(sum) {\n   this.balance = sum + this.balance;\n}\n  withdraw(amount) {\n   if (amount <= this.balance) {\n//Уменьшите баланс на заданную сумму\n   } else {\n//Выводите в консоль сообщение\n}\n}\n}\nconst account = new BankAccount(324234, 534554);"
  },
  {
    "theme": "classes",
    "name": "Задание 16",
    "id": "16",
    "text": "Создайте класс Animal. Класс должен содержать свойства name и sound. Создайте на его основе объект animal и выведите его свойства в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 17",
    "id": "17",
    "text": "Добавьте в класс Animal метод makeSound, который будет выводить в консоль звук животного. Создайте объект animal на основе класса Animal и вызовите метод makeSound.",
    "defaultValue": "class Animal {\n  constructor(name, sound) {\n   this.name = name;\n   this.sound = sound;\n}\n//ваш код\n}\nconst animal = new Animal();\n//ваш код"
  },
  {
    "theme": "classes",
    "name": "Задание 18",
    "id": "18",
    "text": "Создайте класс Point. Класс должен содержать свойства x и y. Создайте на его основе объект point и выведите его свойства в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 19",
    "id": "19",
    "text": "В классе Point добавлен метод getDistance, который будет возвращать расстояние от точки до начала координат (0,0). Создайте объект point на основе класса Point и выведите его расстояние до начала координат с помощью метода getDistance.",
    "defaultValue": "class Point {\n  constructor(x, y) {\n   this.x = x;\n   this.y = y;\n}\n// Метод getDistance возвращает расстояние от точки до начала координат (0,0)\n  getDistance() {\n   return Math.sqrt(this.x ** 2 + this.y ** 2);\n}\n}"
  },
  {
    "theme": "classes",
    "name": "Задание 20",
    "id": "20",
    "text": "Создайте класс Calculator. Класс должен содержать методы add, subtract, multiply и divide, которые будут выполнять соответствующие математические операции над двумя числами и возвращать результат. Создайте объект calc на основе класса Calculator и выполните следующее математическое выражение: (((2+2)-1)*4)/2 с помощью методов. Результат вывести в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 21",
    "id": "21",
    "text": "Создайте класс Person. Класс должен содержать свойства name, age и city. Создайте на его основе объект person. Cоздайте переменную personInfo и в нее поместите строчку, в которой будет вся информация из обьекта. Должно получиться: 'Josh, 43, London' и выведите personInfo в консоль.",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 22",
    "id": "22",
    "text": "Добавьте в класс Person метод changeCity, который будет изменять значение свойства city на новое значение. Создайте объект person на основе класса Person, вызовите метод changeCity с аргументом 'New York' и выведите новое значение свойства city в консоль.",
    "defaultValue": "class Person {\n  constructor(name, age, city) {\n   this.name = name;\n   this.age = age;\n   this.city = city;\n}\n//ваш код\n}\nconst person = new Person('Josh', 43, 'london');\n//ваш код"
  },
  {
    "theme": "classes",
    "name": "Задание 23",
    "id": "23",
    "text": "Создайте два класса EmployeeAmazon и EmployeeApple.\n- EmployeeAmazon, EmployeeApple должны содержать свойства name, position и salary, a EmployeeApple должен содержать еще и метод calculateBonus, который будет увеличивать зарплату на процент, который ты ему передашь аргументом, и менять ее в поле salary.\n- Создайте обьекты employeeAmazon и employeeApple и заполните их данными:\nJosh работает в компании Amazon менеджером, и его зарплата составляет 12 000$ в год.\nFrank работает в компании Apple разработчиком и его зарплата составляет 220 000$ в год.\n- В этом году Josh получит повышение на 15% процентов, а Frank получит повышение на 25%.\n- Используя метод calculateBonus из обьекта employeeApple, повысьте зарплаты этим сотрудникам, не создавая метод calculateBonus в классе EmployeeAmazon.\n- Для изменения зарплаты Josha используйте функцию bind.\n- После изменений зарплат, создайте переменную salaryInfo, в которой будет лежать строка содержащая информацию о зарплатах вот в таком формате :\nFrank salary: указать зарплату Franka за год после повышения, Josh salary: указать зарплату Josha за год после повышения\nВыведите переменную salaryInfo в консоль.",
    "defaultValue": "class EmployeeAmazon {\n//ваш код\n}\nclass EmployeeApple {\n//ваш код\ncalculateBonus(bonus) {\n//ваш код\n}\n}\n//ваш код\nconst salaryInfo = ///ваш код\nconsole.log(salaryInfo)"
  },
  {
    "theme": "classes",
    "name": "Задание 24",
    "id": "24",
    "text": "Создайте класс Product. Класс должен содержать свойства name, price и quantity. Создайте метод displayInfo, который будет выводить все данные в консоль одной строкой: Название продукта: ноутбук, Цена продукта: 999, Количество продукта: 5",
    "defaultValue": ""
  },
  {
    "theme": "classes",
    "name": "Задание 25",
    "id": "25",
    "text": "Добавьте в класс Product метод calculateTotalPrice, который будет возвращать общую стоимость продукта (произведение цены на количество). Создайте объект product на основе класса Product с ценой 10 и количеством 5. Выведите общую стоимость продукта в консоль с помощью метода calculateTotalPrice.",
    "defaultValue": "class Product {\n  constructor(name, price, quantity) {\n   this.name = name;\n   this.price = price;\n   this.quantity = quantity;\n}\n  displayInfo() {\nconsole.log(`Название продукта:${this.name}, Цена продукта:${this.price}, Количество продукта:${this.quantity}`);\n}\n// ваш код\n}\n// ваш код"
  },
  {
    "theme": "classes",
    "name": "Задание 26",
    "id": "26",
    "text": "Создайте класс Triangle. Класс должен содержать свойства side1, side2 и side3, которые представляют длины сторон треугольника. Создайте на его основе объект triangle с параметрами 3, 4 и 5. Добавьте в класс Triangle метод calculatePerimeter, который будет возвращать периметр треугольника (сумма длин всех сторон). Выведите периметр треугольника в консоль с помощью метода calculatePerimeter.",
    "defaultValue": ""
  }
]
